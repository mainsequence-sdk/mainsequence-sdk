steps:
# Step 1: Fetch the GitHub token, write it to a file, build the image, and delete the file
- id: "fetch-token-and-build-image"
  name: "gcr.io/cloud-builders/docker"
  entrypoint: "bash"
  args:
  - "-c"
  - |
    # Build the image using the token file
    docker buildx build \
      -t ${_IMAGE} \
      -t gcr.io/${PROJECT_ID}/${_IMAGE_NAME}:latest \
      .

# Step 2: Push both the tagged and `latest` images
- id: "push image"
  waitFor:
  - "fetch-token-and-build-image"
  name: "gcr.io/cloud-builders/docker"
  args:
  - "push"
  - "${_IMAGE}"

- id: "push-latest-image"
  waitFor:
  - "fetch-token-and-build-image"
  name: "gcr.io/cloud-builders/docker"
  args:
  - "push"
  - "gcr.io/${PROJECT_ID}/${_IMAGE_NAME}:latest"  # Push the `latest` tag

# Substitution variables related to the services
substitutions:
  _IMAGE_NAME: $_TF_IMAGE_NAME
  _IMAGE: gcr.io/${PROJECT_ID}/${_IMAGE_NAME}:${BUILD_ID}-${COMMIT_SHA}

# The structure of the built image
images:
- ${_IMAGE}
- gcr.io/${PROJECT_ID}/${_IMAGE_NAME}:latest  # Ensure `latest` is included here

options:
  logging: CLOUD_LOGGING_ONLY
