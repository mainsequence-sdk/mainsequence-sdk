#publish-to-pypi.yml
# This is a GitHub Actions workflow file that automates the process of
# building and publishing your Python package to PyPI.
# It is triggered automatically whenever you push a new git tag to your repository.

name: Publish Python Package to PyPI

# This section defines the trigger for the workflow.
# It runs on any push event that includes a new tag.
on:
  push:
    tags:
      - 'v*' # Trigger on tags that start with 'v', e.g., v2.0.1

jobs:
  # The 'deploy' job contains all the steps for building and publishing.
  deploy:
    # This job runs on the latest version of Ubuntu provided by GitHub.
    runs-on: ubuntu-latest
    # This section is CRITICAL for trusted publishing.
    # It grants the necessary permission for the workflow to request an
    # OIDC token from GitHub, which PyPI will then verify.
    permissions:
      id-token: write # This is required for trusted publishing

    # These are the individual steps the workflow will execute in order.
    steps:
      # Step 1: Check out the repository's code
      # This downloads your source code into the runner environment.
      - name: Checkout repository
        uses: actions/checkout@v4

      # Step 2: Set up a specific version of Python
      # This ensures a consistent environment for building your package.
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11' # Use a version consistent with your project

      # Step 3: Install build dependencies
      # This step installs the 'build' package, which is the modern
      # standard for building Python packages.
      - name: Install dependencies
        run: python -m pip install --upgrade build

      # Step 4: Build the package
      # This command creates the sdist (source distribution) and wheel
      # files in a 'dist/' directory.
      - name: Build package
        run: python -m build

      # Step 5: Publish the package to PyPI
      # This is the final step. It uses an official action from the Python
      # Packaging Authority (PyPA) to handle the upload. Because of the
      # 'permissions' key above, it will automatically handle the trusted
      # publishing authentication with PyPI.
      - name: Publish package to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
